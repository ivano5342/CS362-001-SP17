/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 18 05:59:10 GMT 2017
 */

package Y;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Y.App;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class App_ESTest extends App_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 31 covered goals:
   * Goal 1. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 2. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 3. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 4. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 5. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 6. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 7. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 8. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 9. all0sAnd1s(Ljava/lang/String;)Z_java.lang.StringIndexOutOfBoundsException_IMPLICIT
   * Goal 10. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 11. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 12. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 13. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 14. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 15. [METHOD] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 16. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 18. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 20. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 22. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 23. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 24. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 26. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 27. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 28. Weak Mutation 114: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> >=
   * Goal 29. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 30. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 31. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        App.all0sAnd1s("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 1
  /*
   * 67 covered goals:
   * Goal 1. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 2. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 3. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - true
   * Goal 4. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 5. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 6. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - true
   * Goal 7. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false
   * Goal 8. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - true
   * Goal 9. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 10. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 11. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 12. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 13. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 14. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 15. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 16. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 17. [Output]: Y.App.all0sAnd1s(Ljava/lang/String;)Z:False
   * Goal 18. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 19. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 20. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 21. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 22. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 23. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 52
   * Goal 24. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 53
   * Goal 25. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 55
   * Goal 26. [METHOD] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 27. [METHODNOEX] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 28. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 32. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 34. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 35. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 36. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 112: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> !=
   * Goal 41. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 42. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 43. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   * Goal 44. Weak Mutation 118: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 45. Weak Mutation 119: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 46. Weak Mutation 120: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 47. Weak Mutation 121: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 0
   * Goal 48. Weak Mutation 122: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 1
   * Goal 49. Weak Mutation 123: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> -1
   * Goal 50. Weak Mutation 124: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 47
   * Goal 51. Weak Mutation 125: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 49
   * Goal 52. Weak Mutation 126: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> -2
   * Goal 53. Weak Mutation 127: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> >=
   * Goal 54. Weak Mutation 129: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 55. Weak Mutation 130: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 56. Weak Mutation 131: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 57. Weak Mutation 132: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 0
   * Goal 58. Weak Mutation 133: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 1
   * Goal 59. Weak Mutation 134: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> -1
   * Goal 60. Weak Mutation 135: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 48
   * Goal 61. Weak Mutation 136: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 50
   * Goal 62. Weak Mutation 138: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator != -> <
   * Goal 63. Weak Mutation 140: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 141: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 142: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp Negation of all
   * Goal 66. Weak Mutation 143: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp IINC 1 all
   * Goal 67. Weak Mutation 144: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp IINC -1 all
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = App.all0sAnd1s("0@Ua,{s");
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 68 covered goals:
   * Goal 1. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 2. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 3. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - true
   * Goal 4. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 5. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 6. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false
   * Goal 7. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - true
   * Goal 8. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - false
   * Goal 9. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 10. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 11. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 12. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 13. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 14. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 15. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 16. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - true in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 17. [Output]: Y.App.all0sAnd1s(Ljava/lang/String;)Z:False
   * Goal 18. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 19. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 20. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 21. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 22. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 23. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 52
   * Goal 24. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 53
   * Goal 25. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 55
   * Goal 26. [METHOD] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 27. [METHODNOEX] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 28. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 32. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 34. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 35. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 36. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 112: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> !=
   * Goal 41. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 42. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 43. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   * Goal 44. Weak Mutation 118: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 45. Weak Mutation 119: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 46. Weak Mutation 120: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 47. Weak Mutation 121: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 0
   * Goal 48. Weak Mutation 122: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 1
   * Goal 49. Weak Mutation 123: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> -1
   * Goal 50. Weak Mutation 124: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 47
   * Goal 51. Weak Mutation 125: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 49
   * Goal 52. Weak Mutation 127: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> >=
   * Goal 53. Weak Mutation 128: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> <=
   * Goal 54. Weak Mutation 129: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 55. Weak Mutation 130: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 56. Weak Mutation 131: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 57. Weak Mutation 132: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 0
   * Goal 58. Weak Mutation 133: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 1
   * Goal 59. Weak Mutation 134: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> -1
   * Goal 60. Weak Mutation 135: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 48
   * Goal 61. Weak Mutation 136: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 50
   * Goal 62. Weak Mutation 137: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator != -> -1
   * Goal 63. Weak Mutation 139: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator != -> >
   * Goal 64. Weak Mutation 140: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 141: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 66. Weak Mutation 142: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp Negation of all
   * Goal 67. Weak Mutation 143: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp IINC 1 all
   * Goal 68. Weak Mutation 144: Y.App.all0sAnd1s(Ljava/lang/String;)Z:55 - InsertUnaryOp IINC -1 all
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = App.all0sAnd1s("1'2l!fz");
      assertFalse(boolean0);
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * Goal 1. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 2. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - false
   * Goal 3. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 4. Branch Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - false in context: Y.App:all0sAnd1s(Ljava/lang/String;)Z
   * Goal 5. all0sAnd1s(Ljava/lang/String;)Z_java.lang.AssertionError_EXPLICIT
   * Goal 6. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 7. [METHOD] Y.App.all0sAnd1s(Ljava/lang/String;)Z
   * Goal 8. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 9. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 10. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 102: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceConstant - Failed precondition all0sAnd1s. parameter cannot be null -> 
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        App.all0sAnd1s((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Failed precondition all0sAnd1s. parameter cannot be null
         //
      }
  }

  //Test case number: 4
  /*
   * 82 covered goals:
   * Goal 1. Y.App.toBinary(I)Ljava/lang/String;: I3 Branch 2 IFGT L22 - false
   * Goal 2. Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - true
   * Goal 3. Y.App.toBinary(I)Ljava/lang/String;: I47 Branch 4 IFNE L30 - false
   * Goal 4. Y.App.toBinary(I)Ljava/lang/String;: I49 Branch 5 IFEQ L30 - true
   * Goal 5. Y.App.toBinary(I)Ljava/lang/String;: I79 Branch 7 IFNE L33 - false
   * Goal 6. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 7. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 8. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 9. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 10. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - true
   * Goal 11. Branch Y.App.toBinary(I)Ljava/lang/String;: I3 Branch 2 IFGT L22 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 12. Branch Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - true in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 13. Branch Y.App.toBinary(I)Ljava/lang/String;: I47 Branch 4 IFNE L30 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 14. Branch Y.App.toBinary(I)Ljava/lang/String;: I49 Branch 5 IFEQ L30 - true in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 15. Branch Y.App.toBinary(I)Ljava/lang/String;: I79 Branch 7 IFNE L33 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 16. toBinary(I)Ljava/lang/String;_java.lang.StringIndexOutOfBoundsException_IMPLICIT
   * Goal 17. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 18. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 19. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 20. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 21. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 22. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 52
   * Goal 23. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 53
   * Goal 24. Y.App.toBinary(I)Ljava/lang/String;: Line 22
   * Goal 25. Y.App.toBinary(I)Ljava/lang/String;: Line 23
   * Goal 26. Y.App.toBinary(I)Ljava/lang/String;: Line 24
   * Goal 27. Y.App.toBinary(I)Ljava/lang/String;: Line 26
   * Goal 28. Y.App.toBinary(I)Ljava/lang/String;: Line 30
   * Goal 29. Y.App.toBinary(I)Ljava/lang/String;: Line 32
   * Goal 30. Y.App.toBinary(I)Ljava/lang/String;: Line 33
   * Goal 31. [METHOD] Y.App.toBinary(I)Ljava/lang/String;
   * Goal 32. Weak Mutation 33: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp Negation of base10Num
   * Goal 33. Weak Mutation 34: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC 1 base10Num
   * Goal 34. Weak Mutation 35: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC -1 base10Num
   * Goal 35. Weak Mutation 38: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceComparisonOperator > -> >=
   * Goal 36. Weak Mutation 39: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 41: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp Negation of base10Num
   * Goal 38. Weak Mutation 42: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC 1 base10Num
   * Goal 39. Weak Mutation 43: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC -1 base10Num
   * Goal 40. Weak Mutation 44: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp Negation of base10Num
   * Goal 41. Weak Mutation 45: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC 1 base10Num
   * Goal 42. Weak Mutation 46: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC -1 base10Num
   * Goal 43. Weak Mutation 47: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 48: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceComparisonOperator <= -> >
   * Goal 45. Weak Mutation 71: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 72: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 73: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation of base10Num
   * Goal 48. Weak Mutation 74: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC 1 base10Num
   * Goal 49. Weak Mutation 75: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC -1 base10Num
   * Goal 50. Weak Mutation 76: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 88: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp Negation of base10Num
   * Goal 52. Weak Mutation 89: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC 1 base10Num
   * Goal 53. Weak Mutation 90: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC -1 base10Num
   * Goal 54. Weak Mutation 91: Y.App.toBinary(I)Ljava/lang/String;:33 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 92: Y.App.toBinary(I)Ljava/lang/String;:33 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 59. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 62. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 63. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 64. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 66. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 67. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 68. Weak Mutation 112: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> !=
   * Goal 69. Weak Mutation 114: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> >=
   * Goal 70. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 71. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 72. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   * Goal 73. Weak Mutation 118: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 74. Weak Mutation 119: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 75. Weak Mutation 120: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 76. Weak Mutation 121: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 0
   * Goal 77. Weak Mutation 122: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 1
   * Goal 78. Weak Mutation 123: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> -1
   * Goal 79. Weak Mutation 124: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 47
   * Goal 80. Weak Mutation 125: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 49
   * Goal 81. Weak Mutation 126: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> -2
   * Goal 82. Weak Mutation 140: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        App.toBinary(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 5
  /*
   * 127 covered goals:
   * Goal 1. Y.App.toBinary(I)Ljava/lang/String;: I3 Branch 2 IFGT L22 - true
   * Goal 2. Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - true
   * Goal 3. Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - false
   * Goal 4. Y.App.toBinary(I)Ljava/lang/String;: I47 Branch 4 IFNE L30 - false
   * Goal 5. Y.App.toBinary(I)Ljava/lang/String;: I49 Branch 5 IFEQ L30 - false
   * Goal 6. Y.App.toBinary(I)Ljava/lang/String;: I52 Branch 6 IF_ICMPEQ L30 - true
   * Goal 7. Y.App.toBinary(I)Ljava/lang/String;: I79 Branch 7 IFNE L33 - false
   * Goal 8. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 9. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 10. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 11. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 12. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - true
   * Goal 13. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false
   * Goal 14. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - false
   * Goal 15. Branch Y.App.toBinary(I)Ljava/lang/String;: I3 Branch 2 IFGT L22 - true in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 16. Branch Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 17. Branch Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - true in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 18. Branch Y.App.toBinary(I)Ljava/lang/String;: I47 Branch 4 IFNE L30 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 19. Branch Y.App.toBinary(I)Ljava/lang/String;: I49 Branch 5 IFEQ L30 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 20. Branch Y.App.toBinary(I)Ljava/lang/String;: I52 Branch 6 IF_ICMPEQ L30 - true in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 21. Branch Y.App.toBinary(I)Ljava/lang/String;: I79 Branch 7 IFNE L33 - false in context: Y.App:toBinary(I)Ljava/lang/String;
   * Goal 22. toBinary(I)Ljava/lang/String;_java.lang.StringIndexOutOfBoundsException_IMPLICIT
   * Goal 23. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 24. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 25. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 26. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 27. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 28. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 52
   * Goal 29. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 53
   * Goal 30. Y.App.toBinary(I)Ljava/lang/String;: Line 22
   * Goal 31. Y.App.toBinary(I)Ljava/lang/String;: Line 23
   * Goal 32. Y.App.toBinary(I)Ljava/lang/String;: Line 24
   * Goal 33. Y.App.toBinary(I)Ljava/lang/String;: Line 26
   * Goal 34. Y.App.toBinary(I)Ljava/lang/String;: Line 27
   * Goal 35. Y.App.toBinary(I)Ljava/lang/String;: Line 28
   * Goal 36. Y.App.toBinary(I)Ljava/lang/String;: Line 30
   * Goal 37. Y.App.toBinary(I)Ljava/lang/String;: Line 32
   * Goal 38. Y.App.toBinary(I)Ljava/lang/String;: Line 33
   * Goal 39. [METHOD] Y.App.toBinary(I)Ljava/lang/String;
   * Goal 40. Weak Mutation 33: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp Negation of base10Num
   * Goal 41. Weak Mutation 34: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC 1 base10Num
   * Goal 42. Weak Mutation 35: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC -1 base10Num
   * Goal 43. Weak Mutation 36: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceComparisonOperator > -> -2
   * Goal 44. Weak Mutation 40: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 41: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp Negation of base10Num
   * Goal 46. Weak Mutation 42: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC 1 base10Num
   * Goal 47. Weak Mutation 43: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC -1 base10Num
   * Goal 48. Weak Mutation 44: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp Negation of base10Num
   * Goal 49. Weak Mutation 45: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC 1 base10Num
   * Goal 50. Weak Mutation 46: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC -1 base10Num
   * Goal 51. Weak Mutation 47: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 48: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceComparisonOperator <= -> >
   * Goal 53. Weak Mutation 49: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp Negation of base10Num
   * Goal 54. Weak Mutation 50: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp IINC 1 base10Num
   * Goal 55. Weak Mutation 51: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp IINC -1 base10Num
   * Goal 56. Weak Mutation 52: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 0
   * Goal 57. Weak Mutation 53: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 1
   * Goal 58. Weak Mutation 54: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> -1
   * Goal 59. Weak Mutation 55: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 3
   * Goal 60. Weak Mutation 56: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> +
   * Goal 61. Weak Mutation 57: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> -
   * Goal 62. Weak Mutation 58: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> *
   * Goal 63. Weak Mutation 59: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> /
   * Goal 64. Weak Mutation 60: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp Negation of base10Num
   * Goal 65. Weak Mutation 61: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp IINC 1 base10Num
   * Goal 66. Weak Mutation 62: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp IINC -1 base10Num
   * Goal 67. Weak Mutation 63: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 0
   * Goal 68. Weak Mutation 64: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 1
   * Goal 69. Weak Mutation 65: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> -1
   * Goal 70. Weak Mutation 66: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 3
   * Goal 71. Weak Mutation 67: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> +
   * Goal 72. Weak Mutation 68: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> %
   * Goal 73. Weak Mutation 69: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> -
   * Goal 74. Weak Mutation 70: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> *
   * Goal 75. Weak Mutation 71: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 72: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 73: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation of base10Num
   * Goal 78. Weak Mutation 74: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC 1 base10Num
   * Goal 79. Weak Mutation 75: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC -1 base10Num
   * Goal 80. Weak Mutation 77: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator == -> >=
   * Goal 81. Weak Mutation 79: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation of base10Num
   * Goal 82. Weak Mutation 80: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC 1 base10Num
   * Goal 83. Weak Mutation 81: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC -1 base10Num
   * Goal 84. Weak Mutation 82: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceConstant - 1 -> 0
   * Goal 85. Weak Mutation 83: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 88: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp Negation of base10Num
   * Goal 87. Weak Mutation 89: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC 1 base10Num
   * Goal 88. Weak Mutation 90: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC -1 base10Num
   * Goal 89. Weak Mutation 91: Y.App.toBinary(I)Ljava/lang/String;:33 - InsertUnaryOp Negation
   * Goal 90. Weak Mutation 92: Y.App.toBinary(I)Ljava/lang/String;:33 - ReplaceComparisonOperator != -> ==
   * Goal 91. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 93. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 94. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 95. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 96. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 97. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 98. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 99. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 100. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 101. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 102. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 103. Weak Mutation 112: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> !=
   * Goal 104. Weak Mutation 114: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> >=
   * Goal 105. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 106. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 107. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   * Goal 108. Weak Mutation 118: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 109. Weak Mutation 119: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 110. Weak Mutation 120: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 111. Weak Mutation 121: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 0
   * Goal 112. Weak Mutation 122: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 1
   * Goal 113. Weak Mutation 123: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> -1
   * Goal 114. Weak Mutation 124: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 47
   * Goal 115. Weak Mutation 125: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 49
   * Goal 116. Weak Mutation 126: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> -2
   * Goal 117. Weak Mutation 127: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> >=
   * Goal 118. Weak Mutation 129: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 119. Weak Mutation 130: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 120. Weak Mutation 131: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 121. Weak Mutation 132: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 0
   * Goal 122. Weak Mutation 133: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 1
   * Goal 123. Weak Mutation 134: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> -1
   * Goal 124. Weak Mutation 135: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 48
   * Goal 125. Weak Mutation 136: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 50
   * Goal 126. Weak Mutation 137: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator != -> -1
   * Goal 127. Weak Mutation 140: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        App.toBinary(170);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 8
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 6
  /*
   * 145 covered goals:
   * Goal 1. Y.App.main([Ljava/lang/String;)V: I7 Branch 1 IF_ICMPGT L9 - false
   * Goal 2. Y.App.toBinary(I)Ljava/lang/String;: I3 Branch 2 IFGT L22 - false
   * Goal 3. Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - true
   * Goal 4. Y.App.toBinary(I)Ljava/lang/String;: I23 Branch 3 IF_ICMPLE L26 - false
   * Goal 5. Y.App.toBinary(I)Ljava/lang/String;: I47 Branch 4 IFNE L30 - false
   * Goal 6. Y.App.toBinary(I)Ljava/lang/String;: I49 Branch 5 IFEQ L30 - false
   * Goal 7. Y.App.toBinary(I)Ljava/lang/String;: I52 Branch 6 IF_ICMPEQ L30 - true
   * Goal 8. Y.App.toBinary(I)Ljava/lang/String;: I79 Branch 7 IFNE L33 - false
   * Goal 9. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I3 Branch 10 IFNE L45 - false
   * Goal 10. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I5 Branch 11 IFNONNULL L45 - true
   * Goal 11. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I22 Branch 12 IFEQ L50 - false
   * Goal 12. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I26 Branch 13 IF_ICMPGT L50 - false
   * Goal 13. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - true
   * Goal 14. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I37 Branch 14 IF_ICMPEQ L52 - false
   * Goal 15. Y.App.all0sAnd1s(Ljava/lang/String;)Z: I40 Branch 15 IF_ICMPNE L52 - false
   * Goal 16. Branch Y.App.main([Ljava/lang/String;)V: I7 Branch 1 IF_ICMPGT L9 - false in context: Y.App:main([Ljava/lang/String;)V
   * Goal 17. main([Ljava/lang/String;)V_java.lang.StringIndexOutOfBoundsException_IMPLICIT
   * Goal 18. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 45
   * Goal 19. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 46
   * Goal 20. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 47
   * Goal 21. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 50
   * Goal 22. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 51
   * Goal 23. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 52
   * Goal 24. Y.App.all0sAnd1s(Ljava/lang/String;)Z: Line 53
   * Goal 25. Y.App.main([Ljava/lang/String;)V: Line 9
   * Goal 26. Y.App.main([Ljava/lang/String;)V: Line 10
   * Goal 27. Y.App.toBinary(I)Ljava/lang/String;: Line 22
   * Goal 28. Y.App.toBinary(I)Ljava/lang/String;: Line 23
   * Goal 29. Y.App.toBinary(I)Ljava/lang/String;: Line 24
   * Goal 30. Y.App.toBinary(I)Ljava/lang/String;: Line 26
   * Goal 31. Y.App.toBinary(I)Ljava/lang/String;: Line 27
   * Goal 32. Y.App.toBinary(I)Ljava/lang/String;: Line 28
   * Goal 33. Y.App.toBinary(I)Ljava/lang/String;: Line 30
   * Goal 34. Y.App.toBinary(I)Ljava/lang/String;: Line 32
   * Goal 35. Y.App.toBinary(I)Ljava/lang/String;: Line 33
   * Goal 36. [METHOD] Y.App.main([Ljava/lang/String;)V
   * Goal 37. Weak Mutation 0: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - -5 -> 0
   * Goal 38. Weak Mutation 1: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - -5 -> 1
   * Goal 39. Weak Mutation 2: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - -5 -> -1
   * Goal 40. Weak Mutation 3: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - -5 -> -6
   * Goal 41. Weak Mutation 4: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - -5 -> -4
   * Goal 42. Weak Mutation 5: Y.App.main([Ljava/lang/String;)V:9 - InsertUnaryOp Negation of i
   * Goal 43. Weak Mutation 6: Y.App.main([Ljava/lang/String;)V:9 - InsertUnaryOp IINC 1 i
   * Goal 44. Weak Mutation 7: Y.App.main([Ljava/lang/String;)V:9 - InsertUnaryOp IINC -1 i
   * Goal 45. Weak Mutation 8: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - 33 -> 0
   * Goal 46. Weak Mutation 9: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - 33 -> 1
   * Goal 47. Weak Mutation 10: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - 33 -> -1
   * Goal 48. Weak Mutation 11: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - 33 -> 32
   * Goal 49. Weak Mutation 12: Y.App.main([Ljava/lang/String;)V:9 - ReplaceConstant - 33 -> 34
   * Goal 50. Weak Mutation 13: Y.App.main([Ljava/lang/String;)V:9 - ReplaceComparisonOperator > -> !=
   * Goal 51. Weak Mutation 16: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 17: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 18: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 19: Y.App.main([Ljava/lang/String;)V:10 - ReplaceConstant - :  -> 
   * Goal 55. Weak Mutation 20: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp Negation of i
   * Goal 56. Weak Mutation 21: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp IINC 1 i
   * Goal 57. Weak Mutation 22: Y.App.main([Ljava/lang/String;)V:10 - InsertUnaryOp IINC -1 i
   * Goal 58. Weak Mutation 33: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp Negation of base10Num
   * Goal 59. Weak Mutation 34: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC 1 base10Num
   * Goal 60. Weak Mutation 35: Y.App.toBinary(I)Ljava/lang/String;:22 - InsertUnaryOp IINC -1 base10Num
   * Goal 61. Weak Mutation 37: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceComparisonOperator > -> !=
   * Goal 62. Weak Mutation 39: Y.App.toBinary(I)Ljava/lang/String;:22 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 41: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp Negation of base10Num
   * Goal 64. Weak Mutation 42: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC 1 base10Num
   * Goal 65. Weak Mutation 43: Y.App.toBinary(I)Ljava/lang/String;:23 - InsertUnaryOp IINC -1 base10Num
   * Goal 66. Weak Mutation 44: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp Negation of base10Num
   * Goal 67. Weak Mutation 45: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC 1 base10Num
   * Goal 68. Weak Mutation 46: Y.App.toBinary(I)Ljava/lang/String;:26 - InsertUnaryOp IINC -1 base10Num
   * Goal 69. Weak Mutation 47: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 48: Y.App.toBinary(I)Ljava/lang/String;:26 - ReplaceComparisonOperator <= -> >
   * Goal 71. Weak Mutation 49: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp Negation of base10Num
   * Goal 72. Weak Mutation 50: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp IINC 1 base10Num
   * Goal 73. Weak Mutation 51: Y.App.toBinary(I)Ljava/lang/String;:27 - InsertUnaryOp IINC -1 base10Num
   * Goal 74. Weak Mutation 52: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 0
   * Goal 75. Weak Mutation 53: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 1
   * Goal 76. Weak Mutation 54: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> -1
   * Goal 77. Weak Mutation 55: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceConstant - 2 -> 3
   * Goal 78. Weak Mutation 56: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> +
   * Goal 79. Weak Mutation 57: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> -
   * Goal 80. Weak Mutation 58: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> *
   * Goal 81. Weak Mutation 59: Y.App.toBinary(I)Ljava/lang/String;:27 - ReplaceArithmeticOperator % -> /
   * Goal 82. Weak Mutation 60: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp Negation of base10Num
   * Goal 83. Weak Mutation 61: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp IINC 1 base10Num
   * Goal 84. Weak Mutation 62: Y.App.toBinary(I)Ljava/lang/String;:28 - InsertUnaryOp IINC -1 base10Num
   * Goal 85. Weak Mutation 63: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 0
   * Goal 86. Weak Mutation 64: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 1
   * Goal 87. Weak Mutation 65: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> -1
   * Goal 88. Weak Mutation 66: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceConstant - 2 -> 3
   * Goal 89. Weak Mutation 67: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> +
   * Goal 90. Weak Mutation 68: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> %
   * Goal 91. Weak Mutation 69: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> -
   * Goal 92. Weak Mutation 70: Y.App.toBinary(I)Ljava/lang/String;:28 - ReplaceArithmeticOperator / -> *
   * Goal 93. Weak Mutation 71: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 72: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator != -> ==
   * Goal 95. Weak Mutation 73: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation of base10Num
   * Goal 96. Weak Mutation 74: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC 1 base10Num
   * Goal 97. Weak Mutation 75: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC -1 base10Num
   * Goal 98. Weak Mutation 77: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator == -> >=
   * Goal 99. Weak Mutation 79: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp Negation of base10Num
   * Goal 100. Weak Mutation 80: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC 1 base10Num
   * Goal 101. Weak Mutation 81: Y.App.toBinary(I)Ljava/lang/String;:30 - InsertUnaryOp IINC -1 base10Num
   * Goal 102. Weak Mutation 82: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceConstant - 1 -> 0
   * Goal 103. Weak Mutation 83: Y.App.toBinary(I)Ljava/lang/String;:30 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 88: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp Negation of base10Num
   * Goal 105. Weak Mutation 89: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC 1 base10Num
   * Goal 106. Weak Mutation 90: Y.App.toBinary(I)Ljava/lang/String;:32 - InsertUnaryOp IINC -1 base10Num
   * Goal 107. Weak Mutation 91: Y.App.toBinary(I)Ljava/lang/String;:33 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 92: Y.App.toBinary(I)Ljava/lang/String;:33 - ReplaceComparisonOperator != -> ==
   * Goal 109. Weak Mutation 99: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - InsertUnaryOp Negation
   * Goal 110. Weak Mutation 100: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != -> ==
   * Goal 111. Weak Mutation 101: Y.App.all0sAnd1s(Ljava/lang/String;)Z:45 - ReplaceComparisonOperator != null -> = null
   * Goal 112. Weak Mutation 103: Y.App.all0sAnd1s(Ljava/lang/String;)Z:46 - ReplaceConstant - 1 -> 0
   * Goal 113. Weak Mutation 104: Y.App.all0sAnd1s(Ljava/lang/String;)Z:47 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 105: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of all
   * Goal 115. Weak Mutation 106: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 all
   * Goal 116. Weak Mutation 107: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 all
   * Goal 117. Weak Mutation 108: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 109: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp Negation of i
   * Goal 119. Weak Mutation 110: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC 1 i
   * Goal 120. Weak Mutation 111: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - InsertUnaryOp IINC -1 i
   * Goal 121. Weak Mutation 112: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> !=
   * Goal 122. Weak Mutation 114: Y.App.all0sAnd1s(Ljava/lang/String;)Z:50 - ReplaceComparisonOperator > -> >=
   * Goal 123. Weak Mutation 115: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp Negation of i
   * Goal 124. Weak Mutation 116: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC 1 i
   * Goal 125. Weak Mutation 117: Y.App.all0sAnd1s(Ljava/lang/String;)Z:51 - InsertUnaryOp IINC -1 i
   * Goal 126. Weak Mutation 118: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 127. Weak Mutation 119: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 128. Weak Mutation 120: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 129. Weak Mutation 121: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 0
   * Goal 130. Weak Mutation 122: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 1
   * Goal 131. Weak Mutation 123: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> -1
   * Goal 132. Weak Mutation 124: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 47
   * Goal 133. Weak Mutation 125: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 48 -> 49
   * Goal 134. Weak Mutation 126: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> -2
   * Goal 135. Weak Mutation 127: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator == -> >=
   * Goal 136. Weak Mutation 129: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp Negation of c
   * Goal 137. Weak Mutation 130: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC 1 c
   * Goal 138. Weak Mutation 131: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - InsertUnaryOp IINC -1 c
   * Goal 139. Weak Mutation 132: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 0
   * Goal 140. Weak Mutation 133: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 1
   * Goal 141. Weak Mutation 134: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> -1
   * Goal 142. Weak Mutation 135: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 48
   * Goal 143. Weak Mutation 136: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 49 -> 50
   * Goal 144. Weak Mutation 137: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceComparisonOperator != -> -1
   * Goal 145. Weak Mutation 140: Y.App.all0sAnd1s(Ljava/lang/String;)Z:52 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        App.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * Goal 1. Y.App.<init>()V: root-Branch
   * Goal 2. Branch Y.App.<init>()V: root-Branch in context: Y.App:<init>()V
   * Goal 3. [METHOD] Y.App.<init>()V
   * Goal 4. [METHODNOEX] Y.App.<init>()V
   */

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      App app0 = new App();
  }
}
